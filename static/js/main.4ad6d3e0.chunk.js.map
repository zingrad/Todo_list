{"version":3,"sources":["components/Card.js","components/List.js","components/TodoForm.js","components/Item.js","components/Modal.js","Todo.js","reportWebVitals.js","index.js"],"names":["Card","props","className","children","Doneimg","done","alt","src","List","items","map","item","text","onClick","onDone","onItemDeleted","id","TodoForm","useState","setText","onChange","event","t","target","value","type","preventDefault","onAddItem","Item","this","lastId","Modal","e","onHideModal","console","log","show","SAVED_ITEMS","Todo","showModal","setShowModal","setItems","useEffect","savedItems","JSON","parse","localStorage","getItem","setItem","stringify","updatedItems","it","filteredItems","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ad6d3e0.chunk.js","sourcesContent":["import React  from \"react\"\n\nfunction Card(props) {\n    return <div className={ props.className? `${props.className} card` : \"card\"}>\n        {props.children}\n    </div>\n}\n\nexport default Card","import React from \"react\"\nimport Card from \"./Card\"\nfunction Doneimg(props){\n\n    if(props.done){\n        return(<img alt='done' src=\"./assets/checkout.svg\"></img>)\n    }else{\n        return(<img alt='undone' src=\"./assets/checkin.svg\"></img>)\n    }\n\n}\n\nfunction List(props){\n\n\n    return(<ul>\n\n        {props.items.map(item=><li key={item.id}>\n            <Card  className={item.done?\"done item\" : \"item\"}>\n            {item.text}\n            <div>\n            <button onClick={() => {props.onDone(item)}}><Doneimg done={item.done}></Doneimg></button>\n            <button onClick={() => {props.onItemDeleted(item)}}><img alt='delete' src=\"./assets/delete.svg\"></img></button>\n            </div>\n            </Card>\n        </li>)} \n            \n         </ul>\n    )\n}//props recebendo items e dando um map para cada item\n\nexport default List;","import React, { useState }  from 'react'\n\nfunction TodoForm(props){\n\n    const [text,setText] = useState(\"\")\n\n    function handleChange(event){\n        let t = event.target.value //dessa forma está pegando os textos digitados no input\n        setText(t);\n    }\n\n    function addItem(event){\n        event.preventDefault();//previne comportamento padrão\n        if(text){//se tiver um texto você pode adicionar se for vazio não \n        // setItems([...items, text]) //aqui foi passado um array para que funcione o Map de items\n        // porque a função Map pede um Array e o useState de items é um Array vazio\n        props.onAddItem(text);\n        setText(\"\") //aqui seta o texto para vazio novamente pra isso tem que colocar\n        //no input o value={text}\n        }\n    }\n\n    return( <form>\n        <input onChange={handleChange} type=\"text\" value={text}></input> \n            <button onClick={addItem}>Add</button>\n    </form>)\n\n}\n\nexport default TodoForm","\nclass Item{\n\n    static lastId = 0\n \n    constructor(text){\n\n        this.id = Item.lastId++\n        this.text = text;\n        this.done = false;\n\n    }\n\n\n\n}\n\nexport default Item","import React from 'react'\nimport Card from \"./Card\"\n\nfunction Modal(props){\n\n    function hideModal(e){\n        let target = e.target;\n        if(target.id === \"modal\"){\n            props.onHideModal()\n        }\n        console.log(target)\n    }\n\n    return(<div  id='modal' onClick={hideModal} className={props.show?\"modal\" : \"modal hide\"}> \n        <Card className='cardModal'>\n            {props.children}\n        </Card>\n    </div>)\n\n\n\n}\n\nexport default Modal","import React, { useState, useEffect } from 'react'\nimport \"./Todo.css\"\nimport List from \"./components/List\"\nimport TodoForm from \"./components/TodoForm\"\nimport Item from \"./components/Item\"\nimport Modal from \"./components/Modal\"\n\nconst SAVED_ITEMS = \"savedItems\"\n\nfunction Todo(){\n\n    const[showModal,setShowModal] = useState(false)\n\n    const [items,setItems] = useState([])\n   \n    useEffect(() => {\n            let savedItems = JSON.parse(localStorage.getItem(SAVED_ITEMS)) //tramsforma em JSON para receber as Strings\n            if(savedItems){\n                setItems(savedItems);\n            }\n        },[])\n\n        useEffect(()=>{\n            localStorage.setItem(SAVED_ITEMS,JSON.stringify(items)) // transforma em string para salvar no local\n        },[items])\n\n\n    function onAddItem(text){\n\n     let item = new Item(text)\n        \n    setItems([...items,item])\n    onHideModal()\n\n    }\n\n\n    function onItemDeleted(item){\n    let filteredItems = items.filter(it=> it.id !== item.id )\n\n    setItems(filteredItems)\n    }\n\n    function onDone(item){\n\n        let updatedItems = items.map(it=>{\n            if(it.id === item.id){\n                it.done = !it.done;\n            }\n            return it;\n        })\n\n        setItems(updatedItems)\n    }\n\n   \n    \n        function onHideModal(){\n            setShowModal(false)\n        }\n\n    return( <div className=\"container\">\n     <header className=\"header\"><h1>Todo</h1> <button onClick={()=>{setShowModal(true)}} className='addButton'>+</button></header>   \n       {/* <TodoForm onAddItem={onAddItem}></TodoForm> */}\n        \n        <List onDone={onDone} onItemDeleted={onItemDeleted}  items={items}></List>\n       \n       <Modal  show={showModal} onHideModal={onHideModal} ><TodoForm onAddItem={onAddItem}></TodoForm></Modal>\n        \n        </div>)\n\n}//acima foi colocado List items={items} para passar como propriedade dessa forma na function list é passado\n//props.items\n\n\n\n\n\nexport default Todo","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Todo from './Todo';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}